const apiKey = "AIzaSyBIP6KFUuoM8oo_3q4ttDPNmNhw91gaii4";

// Chatbot UI Elements
let chatlog;
let userInput;
let sendButton;
let chatbotWindow;
let chatbotToggle;
let typingIndicator;

// HSTU ржУрзЯрзЗржмрж╕рж╛ржЗржЯ ржерзЗржХрзЗ ржХржкрж┐ ржХрж░рж╛ рждржерзНржп (рж╕ржВржХрзНрж╖рзЗржкрзЗ)
const hstuInfo = `
рж╣рж╛ржЬрзА ржорзЛрж╣рж╛ржорзНржоржж ржжрж╛ржирзЗрж╢ ржмрж┐ржЬрзНржЮрж╛ржи ржУ ржкрзНрж░ржпрзБржХрзНрждрж┐ ржмрж┐рж╢рзНржмржмрж┐ржжрзНржпрж╛рж▓рзЯ (HSTU) ржмрж╛ржВрж▓рж╛ржжрзЗрж╢рзЗрж░ ржПржХржЯрж┐ рж╕рзНржмржирж╛ржоржзржирзНржп ржкрж╛ржмрж▓рж┐ржХ ржмрж┐рж╢рзНржмржмрж┐ржжрзНржпрж╛рж▓рзЯред

ржкрзНрж░рждрж┐рж╖рзНржарж╛: рззрзпрзпрзп рж╕рж╛рж▓
ржЕржмрж╕рзНржерж╛ржи: ржжрж┐ржирж╛ржЬржкрзБрж░, ржмрж╛ржВрж▓рж╛ржжрзЗрж╢
ржУрзЯрзЗржмрж╕рж╛ржЗржЯ: https://www.hstu.ac.bd
ржпрзЛржЧрж╛ржпрзЛржЧ: registrar@hstu.ac.bd, ржлрзЛржи: +880247488001

ржкрзНрж░ржзрж╛ржи ржнржмржирж╕ржорзВрж╣: ржкрзНрж░рж╢рж╛рж╕ржирж┐ржХ ржнржмржи, ржПржХрж╛ржбрзЗржорж┐ржХ ржнржмржи, рж▓рж╛ржЗржмрзНрж░рзЗрж░рж┐, ржЧржмрзЗрж╖ржгрж╛ ржХрзЗржирзНржжрзНрж░, ржЫрж╛рждрзНрж░рж╛ржмрж╛рж╕, ржЫрж╛рждрзНрж░рзАржирж┐ржмрж╛рж╕, ржорзЗржбрж┐ржХрзЗрж▓ рж╕рзЗржирзНржЯрж╛рж░, ржЦрзЗрж▓рж╛рж░ ржорж╛ржа ржЗрждрзНржпрж╛ржжрж┐ред

ржЕржирзБрж╖ржжрж╕ржорзВрж╣:
- ржХрзГрж╖рж┐ ржЕржирзБрж╖ржж
- ржХржорзНржкрж┐ржЙржЯрж╛рж░ рж╕рж╛рзЯрзЗржирзНрж╕ ржУ ржЗржЮрзНржЬрж┐ржирж┐рзЯрж╛рж░рж┐ржВ ржЕржирзБрж╖ржж
- ржЗржЮрзНржЬрж┐ржирж┐рзЯрж╛рж░рж┐ржВ ржЕржирзБрж╖ржж
- ржмрж┐ржЬржирзЗрж╕ рж╕рзНржЯрж╛ржбрж┐ржЬ ржЕржирзБрж╖ржж
- ржорзОрж╕рзНржп ржмрж┐ржЬрзНржЮрж╛ржи ржЕржирзБрж╖ржж
- ржнрзЗржЯрзЗрж░рж┐ржирж╛рж░рж┐ ржУ ржПржирж┐ржорзНржпрж╛рж▓ рж╕рж╛рзЯрзЗржирзНрж╕ ржЕржирзБрж╖ржж
- ржмрж┐ржЬрзНржЮрж╛ржи ржЕржирзБрж╖ржж
- рж╕рж╛ржорж╛ржЬрж┐ржХ ржмрж┐ржЬрзНржЮрж╛ржи ржУ ржорж╛ржиржмрж┐ржХ ржЕржирзБрж╖ржж

ржмрж┐ржнрж╛ржЧрж╕ржорзВрж╣ (ржЙржжрж╛рж╣рж░ржг):
- ржХржорзНржкрж┐ржЙржЯрж╛рж░ рж╕рж╛рзЯрзЗржирзНрж╕ ржЕрзНржпрж╛ржирзНржб ржЗржЮрзНржЬрж┐ржирж┐рзЯрж╛рж░рж┐ржВ (CSE)
- ржЗрж▓рзЗржХржЯрзНрж░рж┐ржХрзНржпрж╛рж▓ ржЕрзНржпрж╛ржирзНржб ржЗрж▓рзЗржХржЯрзНрж░ржирж┐ржХ ржЗржЮрзНржЬрж┐ржирж┐рзЯрж╛рж░рж┐ржВ (EEE)
- рж╕рж┐ржнрж┐рж▓ ржЗржЮрзНржЬрж┐ржирж┐рзЯрж╛рж░рж┐ржВ (CE)
- ржХрзГрж╖рж┐
- ржорзОрж╕рзНржп
- ржнрзЗржЯрзЗрж░рж┐ржирж╛рж░рж┐
- ржлрзБржб ржкрзНрж░рж╕рзЗрж╕рж┐ржВ

рж╢рж┐ржХрзНрж╖рж╛рж░рзНржерзА рж╕ржВржЦрзНржпрж╛: ржкрзНрж░рж╛рзЯ рззрзи,рзжрзжрзж+
рж╢рж┐ржХрзНрж╖ржХ рж╕ржВржЦрзНржпрж╛: ржкрзНрж░рж╛рзЯ рзлрзжрзж+

ржмрж┐рж╢рзНржмржмрж┐ржжрзНржпрж╛рж▓рзЯрзЗрж░ рж▓ржХрзНрж╖рзНржп:
- ржЖржзрзБржирж┐ржХ ржУ ржорж╛ржирж╕ржорзНржоржд рж╢рж┐ржХрзНрж╖рж╛ ржкрзНрж░ржжрж╛ржи
- ржЧржмрзЗрж╖ржгрж╛ ржУ ржЙржжрзНржнрж╛ржмржи
- ржЬрж╛рждрзАрзЯ ржУ ржЖржирзНрждрж░рзНржЬрж╛рждрж┐ржХ ржкрж░рзНржпрж╛рзЯрзЗ ржЕржмржжрж╛ржи рж░рж╛ржЦрж╛

CSE Club, HSTU:
CSE Club рж╣рж▓рзЛ рж╣рж╛ржЬрзА ржорзЛрж╣рж╛ржорзНржоржж ржжрж╛ржирзЗрж╢ ржмрж┐ржЬрзНржЮрж╛ржи ржУ ржкрзНрж░ржпрзБржХрзНрждрж┐ ржмрж┐рж╢рзНржмржмрж┐ржжрзНржпрж╛рж▓рзЯрзЗрж░ ржХржорзНржкрж┐ржЙржЯрж╛рж░ рж╕рж╛рзЯрзЗржирзНрж╕ ржЕрзНржпрж╛ржирзНржб ржЗржЮрзНржЬрж┐ржирж┐рзЯрж╛рж░рж┐ржВ ржмрж┐ржнрж╛ржЧрзЗрж░ ржПржХржЯрж┐ ржЫрж╛рждрзНрж░ рж╕ржВржЧржаржиред

ржХрзНрж▓рж╛ржмрзЗрж░ ржЙржжрзНржжрзЗрж╢рзНржп:
- рж╢рж┐ржХрзНрж╖рж╛рж░рзНржерзАржжрзЗрж░ ржкрзНрж░ржпрзБржХрзНрждрж┐ржЧржд ржжржХрзНрж╖рждрж╛ ржмрзГржжрзНржзрж┐
- ржкрзНрж░рзЛржЧрзНрж░рж╛ржорж┐ржВ ржкрзНрж░рждрж┐ржпрзЛржЧрж┐рждрж╛ ржЖрзЯрзЛржЬржи
- рж╕рзЗржорж┐ржирж╛рж░, ржУрзЯрж╛рж░рзНржХрж╢ржк, ржУ ржЯрзЗржХ ржЯржХ
- рж╕ржлржЯ рж╕рзНржХрж┐рж▓ ржУ ржХрзНржпрж╛рж░рж┐рзЯрж╛рж░ ржбрзЗржнрзЗрж▓ржкржорзЗржирзНржЯ
- ржЬрж╛рждрзАрзЯ ржУ ржЖржирзНрждрж░рзНржЬрж╛рждрж┐ржХ ржкрзНрж░рждрж┐ржпрзЛржЧрж┐рждрж╛рзЯ ржЕржВрж╢ржЧрзНрж░рж╣ржг
- ржХрзНрж▓рж╛ржм рж╕ржжрж╕рзНржпржжрзЗрж░ ржоржзрзНржпрзЗ ржирзЗржЯржУрзЯрж╛рж░рзНржХрж┐ржВ ржУ рж╕рж╣ржпрзЛржЧрж┐рждрж╛

ржХрзНрж▓рж╛ржмрзЗрж░ ржирж┐рзЯржорж┐ржд ржХрж╛рж░рзНржпржХрзНрж░ржо:
- ржЗржиржЯрзНрж░рж╛-ржбрж┐ржкрж╛рж░рзНржЯржорзЗржирзНржЯ ржкрзНрж░рзЛржЧрзНрж░рж╛ржорж┐ржВ ржХржиржЯрзЗрж╕рзНржЯ
- рж╕рзЗржорж┐ржирж╛рж░ ржУ ржУрзЯрж╛рж░рзНржХрж╢ржк (ржкрзНрж░рзЛржЧрзНрж░рж╛ржорж┐ржВ, ржУрзЯрзЗржм ржбрзЗржнрзЗрж▓ржкржорзЗржирзНржЯ, AI, ржХрзНржпрж╛рж░рж┐рзЯрж╛рж░, ржЗрждрзНржпрж╛ржжрж┐)
- ржкрзНрж░рзЛржЬрзЗржХрзНржЯ рж╢рзЛ-ржХрзЗ'ржЬ
- ржЯрж┐ржо ржмрж┐рж▓рзНржбрж┐ржВ ржУ ржорзЗржорзНржмрж╛рж░ ржорж┐ржЯржЖржк
- рж╕рзЛрж╢рзНржпрж╛рж▓ ржУрзЯрж╛рж░рзНржХ

ржХрзНрж▓рж╛ржм рж╕ржжрж╕рзНржпржкржж:
- CSE ржмрж┐ржнрж╛ржЧрзЗрж░ ржпрзЗржХрзЛржирзЛ рж╢рж┐ржХрзНрж╖рж╛рж░рзНржерзА рж╕ржжрж╕рзНржп рж╣рждрзЗ ржкрж╛рж░рзЗ
- рж╕ржжрж╕рзНржп рж╣рждрзЗ ржирж┐рж░рзНржжрж┐рж╖рзНржЯ ржлрж░рзНржо ржкрзВрж░ржг ржУ ржлрж┐ ржкрзНрж░ржжрж╛ржи ржХрж░рждрзЗ рж╣рзЯ
- рж╕ржжрж╕рзНржпрж░рж╛ ржХрзНрж▓рж╛ржмрзЗрж░ рж╕ржХрж▓ ржЗржнрзЗржирзНржЯ ржУ рж╕рзБржпрзЛржЧ-рж╕рзБржмрж┐ржзрж╛ ржкрж╛рзЯ

ржХрзНрж▓рж╛ржмрзЗрж░ ржпрзЛржЧрж╛ржпрзЛржЧ:
- ржЗржорзЗржЗрж▓: cseclub@hstu.ac.bd
- ржлрзЗрж╕ржмрзБржХ: https://www.facebook.com/cseclubhstu
- ржЕржлрж┐рж╕: CSE Building, HSTU

ржмрж┐рж╢рзЗрж╖ ржЕрж░рзНржЬржи:
- ржХрзНрж▓рж╛ржмрзЗрж░ рж╕ржжрж╕рзНржпрж░рж╛ ржЬрж╛рждрзАрзЯ ржУ ржЖржирзНрждрж░рзНржЬрж╛рждрж┐ржХ ржкрзНрж░рзЛржЧрзНрж░рж╛ржорж┐ржВ ржХржиржЯрзЗрж╕рзНржЯрзЗ ржкрзБрж░рж╕рзНржХрж╛рж░ржкрзНрж░рж╛ржкрзНржд
- ржмрж┐ржнрж┐ржирзНржи ржЖржЗржЯрж┐ ржХрзЛржорзНржкрж╛ржирж┐рждрзЗ ржХрзНрж▓рж╛ржмрзЗрж░ рж╕рж╛ржмрзЗржХ рж╕ржжрж╕рзНржпрж░рж╛ ржХрж░рзНржорж░ржд

ржирзЛржЯрж┐рж╢, ржнрж░рзНрждрж┐, рж░рзЗржЬрж╛рж▓рзНржЯ, ржУ ржЕржирзНржпрж╛ржирзНржп рждржерзНржпрзЗрж░ ржЬржирзНржп ржмрж┐рж╢рзНржмржмрж┐ржжрзНржпрж╛рж▓рзЯрзЗрж░ ржЕржлрж┐рж╕рж┐рзЯрж╛рж▓ ржУрзЯрзЗржмрж╕рж╛ржЗржЯ ржжрзЗржЦрзБржи: https://www.hstu.ac.bd
`;

// Initialize chatbot when DOM is loaded
document.addEventListener("DOMContentLoaded", function () {
	initializeChatbot();
});

function initializeChatbot() {
	// Create chatbot HTML structure
	createChatbotHTML();

	// Get references to elements
	chatlog = document.getElementById("chatbot-messages");
	userInput = document.getElementById("chatbot-input");
	sendButton = document.getElementById("chatbot-send");
	chatbotWindow = document.getElementById("chatbot-window");
	chatbotToggle = document.getElementById("chatbot-toggle");
	typingIndicator = document.getElementById("typing-indicator");

	// Add event listeners
	chatbotToggle.addEventListener("click", toggleChatbot);
	document
		.getElementById("chatbot-close")
		.addEventListener("click", toggleChatbot);
	sendButton.addEventListener("click", sendMessage);
	userInput.addEventListener("keypress", function (e) {
		if (e.key === "Enter") {
			sendMessage();
		}
	});

	// Add welcome message
	addWelcomeMessage();

	// Add pulse animation to toggle button after 3 seconds
	setTimeout(() => {
		chatbotToggle.classList.add("pulse");
	}, 3000);

	// Add notification badge after 5 seconds
	setTimeout(() => {
		addNotificationBadge();
	}, 5000);
}

function createChatbotHTML() {
	const chatbotHTML = `
        <div class="chatbot-container">
            <button class="chatbot-toggle" id="chatbot-toggle">
                <svg viewBox="0 0 24 24">
                    <path d="M20 2H4c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h4l4 4 4-4h4c1.1 0 2-.9 2-2V4c0-1.1-.9-2-2-2zm-2 12H6v-2h12v2zm0-3H6V9h12v2zm0-3H6V6h12v2z"/>
                </svg>
            </button>
            
            <div class="chatbot-window" id="chatbot-window">
                <div class="chatbot-header">
                    <h3>ЁЯдЦ HSTU CSE Club Assistant</h3>
                    <button class="chatbot-close" id="chatbot-close">├Ч</button>
                </div>
                
                <div class="chatbot-messages" id="chatbot-messages">
                    <div class="welcome-message">
                        ЁЯСЛ рж╕рзНржмрж╛ржЧрждржо! ржЖржорж┐ HSTU CSE Club рж╕ржорзНржкрж░рзНржХрзЗ ржЖржкржирж╛ржХрзЗ рж╕рж╛рж╣рж╛ржпрзНржп ржХрж░рждрзЗ ржкрж╛рж░рж┐ред
                    </div>
                </div>
                
                <div class="typing-indicator" id="typing-indicator">
                    <div class="typing-dots">
                        <div class="typing-dot"></div>
                        <div class="typing-dot"></div>
                        <div class="typing-dot"></div>
                    </div>
                </div>
                
                <div class="chatbot-input-area">
                    <input type="text" class="chatbot-input" id="chatbot-input" placeholder="ржЖржкржирж╛рж░ ржкрзНрж░рж╢рзНржи рж▓рж┐ржЦрзБржи..." />
                    <button class="chatbot-send" id="chatbot-send">
                        <svg viewBox="0 0 24 24">
                            <path d="M2.01 21L23 12 2.01 3 2 10l15 2-15 2z"/>
                        </svg>
                    </button>
                </div>
            </div>
        </div>
    `;

	document.body.insertAdjacentHTML("beforeend", chatbotHTML);
}

function toggleChatbot() {
	chatbotWindow.classList.toggle("active");
	chatbotToggle.classList.remove("pulse");

	if (chatbotWindow.classList.contains("active")) {
		userInput.focus();
		// Scroll to bottom of messages
		setTimeout(() => {
			smoothScrollToBottom();
		}, 100);
	}
}

function addWelcomeMessage() {
	const welcomeMessage = `
        <div class="message bot">
            <strong>рж╣рзНржпрж╛рж▓рзЛ! ЁЯСЛ</strong><br>
            ржЖржорж┐ HSTU CSE Club ржПрж░ AI Assistantред ржЖржорж┐ ржЖржкржирж╛ржХрзЗ ржирж┐ржорзНржирж▓рж┐ржЦрж┐ржд ржмрж┐рж╖ржпрж╝ржЧрзБрж▓рзЛрждрзЗ рж╕рж╛рж╣рж╛ржпрзНржп ржХрж░рждрзЗ ржкрж╛рж░рж┐:
            <br><br>
            ЁЯУЪ ржХрзНрж▓рж╛ржм рж╕ржорзНржкрж░рзНржХрж┐ржд рждржерзНржп<br>
            ЁЯОп ржЗржнрзЗржирзНржЯ ржУ ржХрж░рзНржорж╢рж╛рж▓рж╛<br>
            ЁЯСе ржХржорж┐ржЯрж┐ рж╕ржжрж╕рзНржпржжрзЗрж░ рждржерзНржп<br>
            ЁЯУЕ ржЖржкржХрж╛ржорж┐ржВ ржЗржнрзЗржирзНржЯ<br>
            ЁЯПл HSTU рж╕ржорзНржкрж░рзНржХрж┐ржд ржкрзНрж░рж╢рзНржи<br><br>
            ржЖржкржирж╛рж░ ржкрзНрж░рж╢рзНржи ржЬрж┐ржЬрзНржЮрж╛рж╕рж╛ ржХрж░рзБржи!
        </div>
    `;
	chatlog.innerHTML += welcomeMessage;
}

async function sendMessage() {
	const message = userInput.value.trim();
	if (!message) return;

	userInput.disabled = true;
	sendButton.disabled = true;

	addMessage(message, "user");
	userInput.value = "";
	showTypingIndicator();

	try {
		// ржПржЦрж╛ржирзЗ prompt рждрзИрж░рж┐ ржХрж░рзБржи
		const prompt = `
рж╢рзБржзрзБржорж╛рждрзНрж░ ржирж┐ржЪрзЗрж░ рждржерзНржпрзЗрж░ ржнрж┐рждрзНрждрж┐рждрзЗ ржЙрждрзНрждрж░ ржжрж╛ржУ ржПржмржВ рж╕ржмрж╕ржорзЯ ржмрж╛ржВрж▓рж╛рзЯ ржЙрждрзНрждрж░ ржжрж╛ржУ:
${hstuInfo}

ржкрзНрж░рж╢рзНржи: ${message}
`;

		const response = await fetch(
			"https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent",
			{
				method: "POST",
				headers: {
					"Content-Type": "application/json",
					"X-goog-api-key": apiKey,
				},
				body: JSON.stringify({
					contents: [
						{
							parts: [{ text: prompt }],
						},
					],
				}),
			}
		);

		const data = await response.json();
		hideTypingIndicator();

		if (
			data.candidates &&
			data.candidates[0] &&
			data.candidates[0].content &&
			data.candidates[0].content.parts[0]
		) {
			const reply = data.candidates[0].content.parts[0].text;
			addMessage(reply, "bot");
		} else {
			addMessage(
				"тЪая╕П ржжрзБржГржЦрж┐ржд, ржХрж┐ржЫрзБ ржнрзБрж▓ рж╣ржпрж╝рзЗржЫрзЗред ржЕржирзБржЧрзНрж░рж╣ ржХрж░рзЗ ржЖржмрж╛рж░ ржЪрзЗрж╖рзНржЯрж╛ ржХрж░рзБржиред",
				"error"
			);
		}
	} catch (error) {
		console.error("Error:", error);
		hideTypingIndicator();
		addMessage(
			"тЪая╕П ржЗржирзНржЯрж╛рж░ржирзЗржЯ рж╕ржВржпрзЛржЧрзЗ рж╕ржорж╕рзНржпрж╛ред ржЕржирзБржЧрзНрж░рж╣ ржХрж░рзЗ ржЖржмрж╛рж░ ржЪрзЗрж╖рзНржЯрж╛ ржХрж░рзБржиред",
			"error"
		);
	}

	userInput.disabled = false;
	sendButton.disabled = false;
	userInput.focus();
}

function showTypingIndicator() {
	typingIndicator.classList.add("active");
	smoothScrollToBottom();
}

function hideTypingIndicator() {
	typingIndicator.classList.remove("active");
}

function addNotificationBadge() {
	if (!chatbotWindow.classList.contains("active")) {
		const badge = document.createElement("div");
		badge.className = "notification-badge";
		badge.textContent = "1";
		chatbotToggle.appendChild(badge);

		// Remove badge when chatbot is opened
		chatbotToggle.addEventListener(
			"click",
			function removeBadge() {
				const existingBadge = chatbotToggle.querySelector(
					".notification-badge"
				);
				if (existingBadge) {
					existingBadge.remove();
				}
				chatbotToggle.removeEventListener("click", removeBadge);
			},
			{ once: true }
		);
	}
}

// Add smooth scroll behavior for messages
function smoothScrollToBottom() {
	const scrollHeight = chatlog.scrollHeight;
	const clientHeight = chatlog.clientHeight;
	const maxScrollTop = scrollHeight - clientHeight;

	chatlog.scrollTo({
		top: maxScrollTop,
		behavior: "smooth",
	});
}

// Enhanced message adding with smooth scroll
function addMessage(text, type) {
	const messageDiv = document.createElement("div");
	messageDiv.className = `message ${type}`;
	messageDiv.innerHTML = text;
	chatlog.appendChild(messageDiv);

	// Smooth scroll to bottom
	setTimeout(() => {
		smoothScrollToBottom();
	}, 100);
}
